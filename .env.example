# Logos Platform - Root Environment Variables Guide
# This file provides an overview of environment setup for the entire platform

# =============================================================================
# SETUP OVERVIEW
# =============================================================================
# The Logos platform consists of three main components, each requiring its own
# environment configuration:
#
# 1. logos-frontend/.env.local  - Web interface (Next.js)
# 2. logos-I/.env              - MCP Gateway Server (Python)
# 3. logos-sandbox/.env        - Testing Environment (Python)
#
# Each component has its own .env.example file with detailed instructions.

# =============================================================================
# QUICK START CHECKLIST
# =============================================================================
# □ 1. Set up Supabase project and get database credentials
# □ 2. Get Anthropic API key for Claude Sonnet
# □ 3. Generate secure API keys for MCP Gateway access
# □ 4. Set up OAuth apps for Google Workspace (optional)
# □ 5. Set up OAuth app for Slack (optional)
# □ 6. Copy and configure each component's .env file

# =============================================================================
# SHARED CONFIGURATION VALUES
# =============================================================================
# These values should be consistent across components:

# Supabase Database (used by frontend, referenced by gateway)
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# MCP Gateway Configuration (must match between frontend and gateway)
MCP_GATEWAY_URL=http://localhost:8080
MCP_GATEWAY_API_KEY=your-shared-gateway-api-key

# Anthropic AI (used by frontend and sandbox)
ANTHROPIC_API_KEY=your-anthropic-api-key

# =============================================================================
# OAUTH PROVIDER SETUP (Optional)
# =============================================================================
# If you want to enable integrations, you'll need OAuth apps:

# Google Cloud Console (console.cloud.google.com)
# 1. Create new project or use existing
# 2. Enable APIs: Gmail, Calendar, Drive, Sheets
# 3. Create OAuth 2.0 credentials
# 4. Add redirect URI: http://localhost:3000/auth/callback
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Slack API (api.slack.com)
# 1. Create new Slack app
# 2. Add OAuth redirect URL: http://localhost:3000/api/integrations/slack
# 3. Request necessary scopes (see documentation)
SLACK_CLIENT_ID=your-slack-client-id
SLACK_CLIENT_SECRET=your-slack-client-secret

# =============================================================================
# DEVELOPMENT WORKFLOW
# =============================================================================
# 1. Start with frontend - it's the main interface
#    cd logos-frontend && cp .env.example .env.local
#
# 2. Set up MCP Gateway for integrations
#    cd logos-I && cp .env.example .env
#
# 3. Optional: Set up sandbox for testing
#    cd logos-sandbox && cp .env.example .env
#
# 4. Start services in order:
#    Terminal 1: cd logos-I && python main.py
#    Terminal 2: cd logos-frontend && npm run dev
#    Terminal 3: cd logos-sandbox && python workflow_tests.py (optional)

# =============================================================================
# SECURITY NOTES
# =============================================================================
# • Never commit actual .env files to git
# • Use different API keys for development/staging/production
# • Rotate keys regularly, especially if compromised
# • Use HTTPS in production
# • Limit OAuth scopes to minimum required permissions

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# Common issues and solutions:
#
# "Database connection failed"
# → Check Supabase URL and keys, verify network connectivity
#
# "MCP Gateway not responding"
# → Verify logos-I is running, check API key matches
#
# "OAuth not working"
# → Check redirect URLs in OAuth app settings
# → Verify client ID/secret in environment variables
#
# "Chat not streaming"
# → Check Anthropic API key and network connectivity
